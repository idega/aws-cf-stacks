AWSTemplateFormatVersion: '2010-09-09'
Parameters:
  ProductDomain:
    Description: A domain name
    Type: String
    Default: test.cloud4club.com
Resources:
  # The Amazon S3 bucket into which access logs from S3 (for the application) and CloudFront will be put
  ProductLogsBucket:
    #checkov:skip=CKV_AWS_18: "This bucket is private and only for storing logs"
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: !Sub ${ProductDomain}-logs
      PublicAccessBlockConfiguration:
        BlockPublicAcls : true
        BlockPublicPolicy : true
        IgnorePublicAcls : true
        RestrictPublicBuckets : true
      VersioningConfiguration:
        Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
        - ServerSideEncryptionByDefault:
            SSEAlgorithm: 'AES256'
      OwnershipControls:
        Rules:
          - ObjectOwnership: BucketOwnerPreferred
    DeletionPolicy: Delete

  ProductBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref ProductDomain
      PublicAccessBlockConfiguration:
        BlockPublicAcls : true
        BlockPublicPolicy : true
        IgnorePublicAcls : true
        RestrictPublicBuckets : true
      VersioningConfiguration:
        Status: Enabled
    DeletionPolicy: Delete
    UpdateReplacePolicy: Retain

  ProductWebsiteBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub www.${ProductDomain}
      AccessControl: BucketOwnerFullControl
      WebsiteConfiguration:
        RedirectAllRequestsTo:
          HostName: !Ref ProductDomain

  BucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: !Ref ProductBucket
      PolicyDocument:
        Id: PolicyForCloudFrontPrivateContent
        Version: 2012-10-17
        Statement:
          - Sid: AllowCloudFrontServicePrincipal
            Effect: Allow
            Resource: !Sub ${ProductBucket.Arn}/*
            Principal:
              Service: cloudfront.amazonaws.com
            Condition:
              StringEquals:
                AWS:SourceArn: !Sub arn:aws:cloudfront::${AWS::AccountId}:distribution/${ProductCloudFrontDistribution}
            Action: 's3:GetObject*'

  # The Amazon CloudFront origin access control
  ProductCloudFrontOriginAccessControl:
    Type: AWS::CloudFront::OriginAccessControl
    DependsOn:
      - ProductBucket
    Properties: 
      OriginAccessControlConfig:
        Description: Default Origin Access Control
        Name: !Sub "${AWS::StackName}-ui-origin-access-control"
        OriginAccessControlOriginType: s3
        SigningBehavior: always
        SigningProtocol: sigv4

  # The Amazon CloudFront distribution exposing our Single Page Application
  ProductCloudFrontDistribution:
    #checkov:skip=CKV_AWS_68: "For demo purposes and to reduce cost, no WAF is configured"
    Type: 'AWS::CloudFront::Distribution'
    Properties:
      DistributionConfig: 
          CustomErrorResponses:
            - ErrorCode: 404
              ResponseCode: 200
              ResponsePagePath: /index.html
            - ErrorCode: 403
              ResponseCode: 200
              ResponsePagePath: /index.html
          DefaultCacheBehavior:
            AllowedMethods:
            - GET
            - HEAD
            - OPTIONS
            CachePolicyId: 658327ea-f89d-4fab-a63d-7e88639e58f6 # CachingOptimized
            OriginRequestPolicyId: 88a5eaf4-2fd4-4709-b370-b4c650ea3fcf # CORS-S3Origin
            ResponseHeadersPolicyId: 67f7725c-6f97-4210-82d7-5512b31e9d03 # SecurityHeadersPolicy
            SmoothStreaming: false
            TargetOriginId: !Sub "${AWS::StackName}-ui-s3-origin"
            ViewerProtocolPolicy: redirect-to-https
          DefaultRootObject: index.html
          Enabled: true
          HttpVersion: http2
          Origins:
            - DomainName: !GetAtt ProductBucket.RegionalDomainName
              Id: !Sub "${AWS::StackName}-ui-s3-origin"
              OriginAccessControlId: !GetAtt ProductCloudFrontOriginAccessControl.Id
              S3OriginConfig: {}
          Logging:
            Bucket: !GetAtt ProductLogsBucket.RegionalDomainName
            Prefix: !Sub "${AWS::StackName}-ui-s3-origin"
          ViewerCertificate:
            CloudFrontDefaultCertificate: true
            MinimumProtocolVersion: 'TLSv1.2_2021'
          PriceClass: PriceClass_100

Outputs:
  WebAppDomain:
    Value: !GetAtt ProductCloudFrontDistribution.DomainName
  CloudFrontDistributionId:
    Value: !GetAtt ProductCloudFrontDistribution.Id
  WebAppS3BucketName:
    Value: !Ref ProductBucket